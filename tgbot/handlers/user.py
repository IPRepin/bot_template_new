import logging

from aiogram import Dispatcher
from aiogram.types import Message, CallbackQuery

from tgbot.keyboards.callback_data_factory import stocks_callback
from tgbot.keyboards.inline import (
    stocks_markup,
    stock_online_keyboard,
    stock_tatu_keyboard,
    stock_feedback_keyboard,
    shop_keyboard,
    epil_keyboard,
)
from tgbot.misc.throttling import rate_limit
from tgbot.keyboards.reply import menu_ru
from aiogram.dispatcher.filters import Command, Text
from datetime import datetime

from tgbot.models.db_comands import select_all_stocks, get_name_stocks, select_stock

newdate = datetime.now()
now_date = newdate.strftime("%d.%m.%Y")


@rate_limit(5)
async def user_start(message: Message):
    await message.reply(
        f"–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}, —è —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –∫–ª–∏–Ω–∏–∫–∏ XELLA!\n\n"
        f"üü¢–Ø —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ –ø—Ä–æ –∞–∫—Ü–∏–∏ –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ—Ö–æ–¥—è—Ç –≤ –Ω–∞—à–µ–π –∫–ª–∏–Ω–∏–∫–µ.\n\n"
        f"üü¢–ü–æ–º–æ–≥—É –≤—ã–±—Ä–∞—Ç—å —É—Å–ª—É–≥—É –∏ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–µ—ë –Ω–µ –≤—ã—Ö–æ–¥—è –∏–∑ —Ç–µ–ª–µ–≥—Ä–∞–º.\n\n"
        f"üü¢–†–∞—Å—Å–∫–∞–∂—É –≥–¥–µ —Å–∫–∞—á–∞—Ç—å –∏ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º –º–æ–±–∏–ª—å–Ω—ã–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º,\
                        –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã —Å–º–æ–∂–µ—Ç–µ –Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ª—é–±—É—é —É—Å–ª—É–≥—É –∫–ª–∏–Ω–∏–∫–∏,\
                         –Ω–æ –∏ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –∫–æ—Å–º–µ—Ç–∏–∫—É –º–∏—Ä–æ–≤—ã—Ö –±—Ä–µ–Ω–¥–æ–≤!\n\n"
        f"üü¢–í—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –Ω–∞—à–µ–π –∫–ª–∏–Ω–∏–∫–µ, –≤—Ä–∞—á–∞—Ö –∏ \
                        —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–∏ –∫–æ—Ç–æ—Ä–æ–µ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º.\n\n"
        f"üü¢–ê –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º —è —Å–º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–∞–º—ã–µ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ\
                         –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ —Å–≤—è–∑–∞—Ç—å –≤–∞—Å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–ª–∏–Ω–∏–∫–∏.\n"
        f"–û —á–µ–º —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å...?",
        reply_markup=menu_ru,
    )


@rate_limit(5)
async def open_command(message: Message):
    all_stocks = await get_name_stocks()
    for stock in all_stocks:
        await message.answer_photo(stock.image, caption=f"{stock.name}\n"
                                                        f"{stock.description}")


@rate_limit(5)
async def services(message: Message):
    await message.answer("–ê —Ç—É—Ç –±—É–¥–µ—Ç —Å–ø–∏—Å–æ–∫ —É—Å–ª—É–≥")


@rate_limit(5)
async def stocks(message: Message):
    await message.answer(f"–°–ø–∏—Å–æ–∫ –∞–∫—Ü–∏–π –Ω–∞ {now_date}:", reply_markup=stocks_markup)


@rate_limit(5)
async def contacts(message: Message):
    await message.answer(
        "–ê —Ç—É—Ç –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –Ω–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ,\
     –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö –∏–ª–∏ –≤—ã–∑–≤–∞—Ç—å —Ç–∞–∫—Å–∏ –¥–æ –∫–ª–∏–Ω–∏–∫–∏!"
    )


"""–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∞–∫—Ü–∏–π"""


@rate_limit(5)
async def online_btn(call: CallbackQuery, callback_data: dict):
    await call.answer(cache_time=60)
    logging.info(f"callback_data = {call.data}")
    logging.info(f"callback_data dict = {callback_data}")
    stock_date = callback_data.get("stock_date")
    stock = await select_stock(1)
    await call.message.answer_photo(stock.image,
                                    caption=f"–ê–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç {stock_date}!\n"
                                            f"{stock.name}\n"
                                            f"{stock.description}",
                                    reply_markup=stock_online_keyboard,
                                    )


@rate_limit(5)
async def tatu_btn(call: CallbackQuery, callback_data: dict):
    await call.answer(cache_time=60)
    logging.info(f"callback_data = {call.data}")
    logging.info(f"callback_data dict = {callback_data}")
    stock_date = callback_data.get("stock_date")
    stock = await select_stock(2)
    await call.message.answer_photo(stock.image,
                                    caption=f"–ê–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç {stock_date}!\n"
                                            f"{stock.name}\n"
                                            f"{stock.description}",
                                    reply_markup=stock_online_keyboard,
                                    )


@rate_limit(5)
async def feedback_btn(call: CallbackQuery, callback_data: dict):
    await call.answer(cache_time=60)
    logging.info(f"callback_data = {call.data}")
    logging.info(f"callback_data dict = {callback_data}")
    stock_date = callback_data.get("stock_date")
    stock = await select_stock(3)
    await call.message.answer_photo(stock.image,
                                    caption=f"–ê–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç {stock_date}!\n"
                                            f"{stock.name}\n"
                                            f"{stock.description}",
                                    reply_markup=stock_online_keyboard,
                                    )


@rate_limit(5)
async def chanel_btn(call: CallbackQuery):
    await call.answer("–°–ø–∏—Å–æ–∫ –∞–∫—Ü–∏–π:")
    await call.message.edit_reply_markup(reply_markup=stocks_markup)


@rate_limit(5)
async def shop_btn(call: CallbackQuery, callback_data: dict):
    await call.answer(cache_time=60)
    logging.info(f"callback_data = {call.data}")
    logging.info(f"callback_data dict = {callback_data}")
    stock_date = callback_data.get("stock_date")
    stock = await select_stock(4)
    await call.message.answer_photo(stock.image,
                                    caption=f"–ê–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç {stock_date}!\n"
                                            f"{stock.name}\n"
                                            f"{stock.description}",
                                    reply_markup=stock_online_keyboard,
                                    )


@rate_limit(5)
async def epil_btn(call: CallbackQuery, callback_data: dict):
    await call.answer(cache_time=60)
    logging.info(f"callback_data = {call.data}")
    logging.info(f"callback_data dict = {callback_data}")
    stock_date = callback_data.get("stock_date")
    stock = await select_stock(5)
    await call.message.answer_photo(stock.image,
                                    caption=f"–ê–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç {stock_date}!\n"
                                            f"{stock.name}\n"
                                            f"{stock.description}",
                                    reply_markup=stock_online_keyboard,
                                    )


@rate_limit(5)
async def pm_btn(call: CallbackQuery, callback_data: dict):
    await call.answer(cache_time=60)
    logging.info(f"callback_data = {call.data}")
    logging.info(f"callback_data dict = {callback_data}")
    stock_date = callback_data.get("stock_date")
    stock = await select_stock(6)
    await call.message.answer_photo(stock.image,
                                    caption=f"–ê–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç {stock_date}!\n"
                                            f"{stock.name}\n"
                                            f"{stock.description}",
                                    reply_markup=stock_online_keyboard,
                                    )


def register_user(dp: Dispatcher):
    dp.register_message_handler(user_start, commands=["start", "help"], state="*")
    dp.register_message_handler(open_command, Text(endswith="–∫–ª–∏–Ω–∏–∫–µ"))
    dp.register_message_handler(services, Text(endswith="—É—Å–ª—É–≥–∏"))

    dp.register_message_handler(stocks, Text(endswith="–∞–∫—Ü–∏–∏"))

    dp.register_message_handler(contacts, Text(endswith="–Ω–∞–π—Ç–∏?"))

    dp.register_callback_query_handler(
        online_btn, stocks_callback.filter(stock_name="online")
    )
    dp.register_callback_query_handler(
        tatu_btn, stocks_callback.filter(stock_name="tatu")
    )
    dp.register_callback_query_handler(
        feedback_btn, stocks_callback.filter(stock_name="feedback")
    )
    dp.register_callback_query_handler(
        shop_btn, stocks_callback.filter(stock_name="shop")
    )
    dp.register_callback_query_handler(
        epil_btn, stocks_callback.filter(stock_name="epil")
    )
    dp.register_callback_query_handler(pm_btn, stocks_callback.filter(stock_name="pm"))
    dp.register_callback_query_handler(chanel_btn, text="chanel")
