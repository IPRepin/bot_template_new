import logging

from aiogram import Dispatcher
from aiogram.types import Message, CallbackQuery

from tgbot.keyboards.callback_data_factory import stocks_callback
from tgbot.keyboards.inline import stocks_markup, stock_online_keyboard, stock_tatu_keyboard, stock_feedback_keyboard
from tgbot.misc.throttling import rate_limit
from tgbot.keyboards.reply import menu_ru
from aiogram.dispatcher.filters import Command, Text
from datetime import datetime


newdate = datetime.now()
now_date = newdate.strftime("%d.%m.%Y")


@rate_limit(5)
async def user_start(message: Message):
    await message.reply(f"–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}, —è —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –∫–ª–∏–Ω–∏–∫–∏ XELLA!\n\n"
                        f"üü¢–Ø —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ –ø—Ä–æ –∞–∫—Ü–∏–∏ –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ—Ö–æ–¥—è—Ç –≤ –Ω–∞—à–µ–π –∫–ª–∏–Ω–∏–∫–µ.\n\n"
                        f"üü¢–ü–æ–º–æ–≥—É –≤—ã–±—Ä–∞—Ç—å —É—Å–ª—É–≥—É –∏ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–µ—ë –Ω–µ –≤—ã—Ö–æ–¥—è –∏–∑ —Ç–µ–ª–µ–≥—Ä–∞–º.\n\n"
                        f"üü¢–†–∞—Å—Å–∫–∞–∂—É –≥–¥–µ —Å–∫–∞—á–∞—Ç—å –∏ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º –º–æ–±–∏–ª—å–Ω—ã–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º,\
                        –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã —Å–º–æ–∂–µ—Ç–µ –Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ª—é–±—É—é —É—Å–ª—É–≥—É –∫–ª–∏–Ω–∏–∫–∏,\
                         –Ω–æ –∏ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –∫–æ—Å–º–µ—Ç–∏–∫—É –º–∏—Ä–æ–≤—ã—Ö –±—Ä–µ–Ω–¥–æ–≤!", reply_markup=menu_ru)


@rate_limit(5)
async def open_command(message: Message):
    await message.answer('–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:\n'
                         '–ü–Ω-–ü—Ç —Å 8:00 –¥–æ 20:00')
    # await message.delete()


@rate_limit(5)
async def services(message: Message):
    await message.answer('–°–ø–∏—Å–æ–∫ —É—Å–ª—É–≥:')
    # await message.delete()


# @rate_limit(5)
# async def online_recording(message: Message):
#     await message.answer('<a href="https://b157912.yclients.com/company/163813/menu?o="> üëâ–ó–∞–ø–∏—Å–∞—Ç—å—Å—èüëà</a>')
    # await message.delete()


@rate_limit(5)
async def stocks(message: Message):
    await message.answer(f'–°–ø–∏—Å–æ–∫ –∞–∫—Ü–∏–π –Ω–∞ {now_date}', reply_markup=stocks_markup)
    # await message.delete()


@rate_limit(5)
async def shop(message: Message):
    await message.answer('–ü–µ—Ä–µ—Ö–æ–¥ –≤ –º–∞–≥–∞–∑–∏–Ω –∫–æ—Å–º–µ—Ç–∏–∫–∏')
    # await message.delete()


@rate_limit(5)
async def contacts(message: Message):
    await message.answer('–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ')
    # await message.delete()


'''–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∞–∫—Ü–∏–π'''


@rate_limit(5)
async def online_btn(call: CallbackQuery, callback_data: dict):
    await call.answer(cache_time=60)
    logging.info(f'callback_data = {call.data}')
    logging.info(f'callback_data dict = {callback_data}')
    stock_date = callback_data.get('stock_date')
    await call.message.answer(f"–ê–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç {stock_date}!\n"
                              f"–ó–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —á–µ—Ä–µ–∑ –≤–∏–¥–∂–µ—Ç –æ–Ω–ª–∞–π–Ω-–∑–∞–ø–∏—Å–∏\
                               –∏–ª–∏ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –∞ —Å –Ω–∞—Å —Å–∫–∏–¥–∫–∞ 5% –Ω–∞ –≤—Å–µ",
                              reply_markup=stock_online_keyboard
                              )


@rate_limit(5)
async def tatu_btn(call: CallbackQuery, callback_data: dict):
    await call.answer(cache_time=60)
    logging.info(f'callback_data = {call.data}')
    logging.info(f'callback_data dict = {callback_data}')
    stock_date = callback_data.get('stock_date')
    await call.message.answer(f"–ê–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç {stock_date}! \n"
                              f"–ï—Å–ª–∏ –≤—ã –≤–ø–µ—Ä–≤—ã–µ —É–¥–∞–ª—è–µ—Ç–µ —Ç–∞—Ç—É, —Ç–æ –ø–æ–ª—É—á–∏—Ç–µ —Å–∫–∏–¥–∫—É 10%\
                               –Ω–∞ –ø–µ—Ä–≤—ã–π —Å–µ–∞–Ω—Å —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞ –∞–ø–ø–∞—Ä–∞—Ç–µ PicoSure",
                              reply_markup=stock_tatu_keyboard
                              )


@rate_limit(5)
async def feedback_btn(call: CallbackQuery, callback_data: dict):
    await call.answer(cache_time=60)
    logging.info(f'callback_data = {call.data}')
    logging.info(f'callback_data dict = {callback_data}')
    stock_date = callback_data.get('stock_date')
    await call.message.answer(f"–ê–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç {stock_date}! \n"
                              f"–í—Å–µ–≥–æ 3 —à–∞–≥–∞ –¥–æ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏:\n"
                              f"1Ô∏è‚É£<b>–û—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤</b>\n"
                              f"–ù–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤—ã –¥—É–º–∞–µ—Ç–µ –æ –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç–µ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞—Ö\n"
                              f"\n"
                              f"2Ô∏è‚É£<b>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–∑—ã–≤</b>\n"
                              f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—Ç–∑—ã–≤–∞ –Ω–∞–º –≤ WhatsApp –∏–ª–∏ –ø–æ–∫–∞–∂–∏—Ç–µ –Ω–∞ —Ä–µ—Å–µ–ø—à–Ω –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ\n"
                              f"\n"
                              f"3Ô∏è‚É£<b>–ü–æ–ª—É—á–∏—Ç–µ —Å–∫–∏–¥–∫—É</b>\n"
                              f"–ú—ã —Å—Ä–∞–∑—É –ø—Ä–∏–º–µ–Ω–∏–º —Å–∫–∏–¥–∫—É –∫ –±–ª–∏–∂–∞–π—à–µ–º—É –≤–∏–∑–∏—Ç—É",
                              reply_markup=stock_feedback_keyboard,
                              )


@rate_limit(5)
async def chanel_btn(call: CallbackQuery):
    await call.answer("–°–ø–∏—Å–æ–∫ –∞–∫—Ü–∏–π:")
    await call.message.edit_reply_markup(reply_markup=stocks_markup)


def register_user(dp: Dispatcher):
    dp.register_message_handler(user_start, commands=["start", "help"], state="*")
    dp.register_message_handler(open_command, Text(endswith='—Ä–∞–±–æ—Ç—ã'))
    dp.register_message_handler(services, Text(endswith='–£—Å–ª—É–≥–∏'))
    # dp.register_message_handler(online_recording, Text(endswith='–∑–∞–ø–∏—Å—å'))
    dp.register_message_handler(stocks, Text(endswith='–ê–∫—Ü–∏–∏'))
    dp.register_message_handler(shop, Text(endswith='shop'))
    dp.register_message_handler(contacts, Text(endswith='–ö–æ–Ω—Ç–∞–∫—Ç—ã'))

    dp.register_callback_query_handler(online_btn, stocks_callback.filter(stock_name='online'))
    dp.register_callback_query_handler(tatu_btn, stocks_callback.filter(stock_name='tatu'))
    dp.register_callback_query_handler(feedback_btn, stocks_callback.filter(stock_name='feedback'))
    dp.register_callback_query_handler(chanel_btn, text='chanel')
